# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C6DXygcmKAzb1e61pHaRR8iRJskdVLer
"""

import numpy as np
from image_generator import yolov5_image_generator
import os


def classify_and_detect(images):
    """

    :param np.ndarray images: N x 12288 array containing N 64x64x3 images flattened into vectors
    :return: np.ndarray, np.ndarray
    """
    N = images.shape[0]


    
    pred_class = np.empty((N, 2), dtype=np.int32)
    
    pred_bboxes = np.empty((N, 2, 4), dtype=np.float64)
    

    yolov5_image_generator(images)

    os.system('pip install -r requirements.txt')

    os.system('python detect.py --source test --weights best.pt --conf 0.25 --name mnist_assignment7_2_det --save-txt')

    for i in range(N):
        labels = np.loadtxt("runs/detect/mnist_assignment7_2_det/labels/image"+str(i+1)+".txt", dtype=object)
        if labels.ndim == 1.0:
            pred_class[i][0] = int(labels[0])
            pred_class[i][1] = int(labels[0])
            pred_bboxes[i][0][0] = round(float(labels[2])*64) - 14
            pred_bboxes[i][0][1] = round(float(labels[1])*64) - 14
            pred_bboxes[i][0][2] = round(float(labels[2])*64) + 14
            pred_bboxes[i][0][3] = round(float(labels[1])*64) + 14
            pred_bboxes[i][1][0] = round(float(labels[2])*64) - 14
            pred_bboxes[i][1][1] = round(float(labels[1])*64) - 14
            pred_bboxes[i][1][2] = round(float(labels[2])*64) + 14
            pred_bboxes[i][1][3] = round(float(labels[1])*64) + 14
        else:
            labels = labels[labels[:, 0].argsort()]
            pred_class[i][0] = int(labels[0][0])
            pred_class[i][1] = int(labels[1][0])
            pred_bboxes[i][0][0] = round(float(labels[0][2])*64) - 14
            pred_bboxes[i][0][1] = round(float(labels[0][1])*64) - 14
            pred_bboxes[i][0][2] = round(float(labels[0][2])*64) + 14
            pred_bboxes[i][0][3] = round(float(labels[0][1])*64) + 14
            pred_bboxes[i][1][0] = round(float(labels[1][2])*64) - 14
            pred_bboxes[i][1][1] = round(float(labels[1][1])*64) - 14
            pred_bboxes[i][1][2] = round(float(labels[1][2])*64) + 14
            pred_bboxes[i][1][3] = round(float(labels[1][1])*64) + 14

    pred_class = np.sort(pred_class)
    return pred_class, pred_bboxes